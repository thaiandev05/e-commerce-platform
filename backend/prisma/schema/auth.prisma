model Session {
    id                  String   @id @default(uuid()) @db.Uuid
    hashingRefreshToken String?  @map("hasing_refreshtoken") @db.VarChar(255)
    userAgent           String   @db.VarChar(1000) 
    userIp              String?  @db.VarChar(100)
    createdAt           DateTime @default(now()) @map("created_at") @db.Timestamptz()
    updatedAt           DateTime @updatedAt @map("updated_at")

    loginedAt  DateTime? @map("logined_at") @db.Timestamptz()
    logoutedAt DateTime? @map("logouted_at") @db.Timestamptz()

    // realtion
    userId String @db.Uuid
    user   User   @relation(name: "sessions", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@map("session")
}

model Code {
    id        String   @id @default(uuid()) @db.Uuid
    code      String   @db.VarChar(100)
    createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
    expiredAt DateTime @map("expired_at") @db.Timestamptz()

    // relation
    userId String @unique @db.Uuid
    user   User   @relation(fields: [userId], references: [id])

    @@index([userId])
    @@map("code")
}

enum TYPECODE {
    EMAIL
    PHONE

    @@map("type_code")
}

enum AccountType {
    EMAIL
    OAUTH2

    @@map("account_type")
}
